#!/usr/bin/env ruby

require "proweb"

project_ids = Proweb.config["project_ids"]

Proweb.connect

old_data = "#{Proweb.config['files']['supplements']}/proweb.attributes.all_or_projects.xls"
reproducer = Proweb::OldDataMerger.new(
  old_data, 'attribute_id', ['category_1']
)

attribs = Proweb::Project.where(:id => project_ids).map do |project|
  project.pw_attributes.where(:attribute_kind_id => 43).all
end.flatten.uniq


headers = [
  "attribute_id",
  "usage_count"
]

headers += project_ids.map{|id| "usage_count_project_#{id}"}
headers += reproducer.keys
headers += [
  'translation_1', 'translation_2', 'translation_3'
]

puts headers.join("|")

attribs.each do |a|
  if a.translations.any?{|t| t.name.match(/\n/m)}
    STDERR.puts "ID: #{a.id}: NEWLINES"
    next
  end

  names = a.translations.map{|t| t.name}
  names += [""] until names.size == 3

  results = [a.id] + [a.objects.count]
  results += project_ids.map{|id|
    a.objects.where(:project_id => id).count
  }
  results += reproducer.values(a.id) + names
  puts results.join("|")
end
